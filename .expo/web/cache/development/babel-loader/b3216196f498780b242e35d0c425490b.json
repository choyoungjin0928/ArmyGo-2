{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ThermalTake\\\\Desktop\\\\react_native\\\\ArmyGo\\\\ArmyGo\\\\App.js\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport StackNavigator from \"./navigation/StackNavigator\";\nimport { AppLoading } from 'expo';\nimport * as Font from \"expo-font\";\nimport { AntDesign, FontAwesome } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var cacheFonts = function cacheFonts(fonts) {\n    return fonts.map(function (font) {\n      return Font.loadAsync(font);\n    });\n  };\n\n  var funcStart = function funcStart() {\n    console.log(\"시작\");\n    cacheFonts([AntDesign.font, FontAwesome.font]);\n  };\n\n  var funcError = function funcError() {\n    console.log(\"에러\");\n  };\n\n  var funcFinish = function funcFinish() {\n    console.log(\"완료\");\n    setIsLoading(false);\n  };\n\n  return isLoading ? React.createElement(AppLoading, {\n    startAsync: funcStart,\n    onError: funcError,\n    onFinish: funcFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }\n  }) : React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(StackNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/ThermalTake/Desktop/react_native/ArmyGo/ArmyGo/App.js"],"names":["React","useState","NavigationContainer","StackNavigator","AppLoading","Font","AntDesign","FontAwesome","StatusBar","App","isLoading","setIsLoading","cacheFonts","fonts","map","font","loadAsync","funcStart","console","log","funcError","funcFinish"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,cAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACMR,QAAQ,CAAC,IAAD,CADd;AAAA;AAAA,MACrBS,SADqB;AAAA,MACVC,YADU;;AAE5B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,aAAIV,IAAI,CAACW,SAAL,CAAeD,IAAf,CAAJ;AAAA,KAAd,CAAJ;AAAA,GAAxB;;AACA,MAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAP,IAAAA,UAAU,CAAC,CAACN,SAAS,CAACS,IAAX,EAAiBR,WAAW,CAACQ,IAA7B,CAAD,CAAV;AACD,GAHD;;AAIA,MAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBF,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,GAFD;;AAGA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAIA,SAAOD,SAAS,GAAG,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEO,SAAxB;AAAmC,IAAA,OAAO,EAAEG,SAA5C;AAAuD,IAAA,QAAQ,EAAEC,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACd,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport StackNavigator from './navigation/StackNavigator'\nimport { AppLoading } from 'expo';\nimport * as Font from \"expo-font\"\nimport { AntDesign, FontAwesome } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true)\n  const cacheFonts = fonts => fonts.map(font => Font.loadAsync(font));\n  const funcStart = () => {\n    console.log(\"시작\")\n    cacheFonts([AntDesign.font, FontAwesome.font]);\n  }\n  const funcError = () => {\n    console.log(\"에러\")\n  }\n  const funcFinish = () => {\n    console.log(\"완료\")\n    setIsLoading(false)\n  }\n  return isLoading ? <AppLoading startAsync={funcStart} onError={funcError} onFinish={funcFinish} /> : (\n    <NavigationContainer>\n      <StatusBar style=\"light\" />\n      <StackNavigator />\n    </NavigationContainer>\n  )\n}"]},"metadata":{},"sourceType":"module"}